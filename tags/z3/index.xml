<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>z3 on wborgeaud</title>
    <link>https://solvable.group/tags/z3/</link>
    <description>Recent content in z3 on wborgeaud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 31 Oct 2020 03:57:25 -0700</lastBuildDate><atom:link href="https://solvable.group/tags/z3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Donjon CTF Writeup: Secret RNG</title>
      <link>https://solvable.group/posts/secret-rng/</link>
      <pubDate>Sat, 31 Oct 2020 03:57:25 -0700</pubDate>
      
      <guid>https://solvable.group/posts/secret-rng/</guid>
      <description>TLDR This was a very nice challenge in the Donjon CTF. The goal was to reverse engineer the state of the PRNG math/rand in the Go standard library to guess the private key of a signature scheme and sign a given message. I solved this challenge by using the SMT solver Z3 to automagically recover the RNG state.
Description Connecting to nc ots-sig.donjon-ctf.io 4001, we get:
Public key: djX6vqVMj0fTZGIhJFgN1VHLgGgaBxWEhvxp1MzB09s= Enter signature: test You failed!</description>
    </item>
    
  </channel>
</rss>
