<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on wborgeaud</title>
    <link>https://wborgeaud.github.io/tags/rust/</link>
    <description>Recent content in rust on wborgeaud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Nov 2019 13:57:25 -0700</lastBuildDate>
    
	<atom:link href="https://wborgeaud.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Rust in React Native through WebAssembly</title>
      <link>https://wborgeaud.github.io/posts/rust-wasm-react-native/</link>
      <pubDate>Thu, 14 Nov 2019 13:57:25 -0700</pubDate>
      
      <guid>https://wborgeaud.github.io/posts/rust-wasm-react-native/</guid>
      <description>This post shows how to use Rust functions in a React Native project through WebAssembly. I struggled quite a bit to find an easy way to make it work, so I thought I&amp;rsquo;d share my findings. You can find the code for this post here.
Here&amp;rsquo;s the TLDR:
 Create a wasm-pack project exposing the Rust functions you want to export. Serve a web page exposing these functions through message events.</description>
    </item>
    
  </channel>
</rss>