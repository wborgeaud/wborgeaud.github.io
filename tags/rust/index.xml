<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on wborgeaud</title>
    <link>https://solvable.group/tags/rust/</link>
    <description>Recent content in rust on wborgeaud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Oct 2021 00:57:25 -0700</lastBuildDate><atom:link href="https://solvable.group/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ECFFT on the BN254 base field in Rust</title>
      <link>https://solvable.group/posts/ecfft-bn254/</link>
      <pubDate>Sat, 16 Oct 2021 00:57:25 -0700</pubDate>
      
      <guid>https://solvable.group/posts/ecfft-bn254/</guid>
      <description>$$ \def\F{\mathbb{F}} $$
tl;dr: A Rust implementation of the ECFFT here: https://github.com/wborgeaud/ecfft-bn254.
The last post was about the ECFFT algorithm by Eli Ben-Sasson, Dan Carmon, Swastik Kopparty and David Levit. At the end of the post, I mentioned that it would be fairly straightforward to implement the ECFFT algorithms in low-level languages like Rust by doing all the mathematical precomputations in Sage.
Well I have done exactly that and implemented the EXTEND and ENTER operations in Rust for the base field of the BN254 curve.</description>
    </item>
    
    <item>
      <title>Use Rust in React Native through WebAssembly</title>
      <link>https://solvable.group/posts/rust-wasm-react-native/</link>
      <pubDate>Thu, 14 Nov 2019 13:57:25 -0700</pubDate>
      
      <guid>https://solvable.group/posts/rust-wasm-react-native/</guid>
      <description>This post shows how to use Rust functions in a React Native project through WebAssembly. I struggled quite a bit to find an easy way to make it work, so I thought I&amp;rsquo;d share my findings. You can find the code for this post here.
Here&amp;rsquo;s the TLDR:
 Create a wasm-pack project exposing the Rust functions you want to export. Serve a web page exposing these functions through message events.</description>
    </item>
    
  </channel>
</rss>
